FutureBuilder<List<Book>>(
        future: books,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          }

          if (snapshot.hasError) {
            return Center(child: Text('Error: ${snapshot.error}'));
          }

          if (!snapshot.hasData || snapshot.data!.isEmpty) {
            return Center(child: Text("No books yet"));
          }

          final bookList = snapshot.data!;

          return ListView.builder(
            itemCount: bookList.length,
            itemBuilder: (context, index) {
              final book = bookList[index];
              return ListTile(
                title: Text(book.label),
                subtitle: Text('Total Pages: ${book.totalPages}'),
                trailing: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text("${(book.progress * 100).toStringAsFixed(1)}%"),
                    SizedBox(height: 8),
                    LinearProgressIndicator(
                      value: book.progress,
                      minHeight: 8,
                      backgroundColor: Colors.grey.shade300,
                      valueColor: AlwaysStoppedAnimation<Color>(Colors.blue),
                    ),
                  ],
                ),
              );
            },
          );})